# Script para Gerar PDF do Roteiro de Testes
# EmployeeVirtual - Gerador de PDF

param(
    [Parameter(Mandatory=$false)]
    [string]$OutputName = "ROTEIRO_TESTES_EMPLOYEEVIRTUAL",
    
    [Parameter(Mandatory=$false)]
    [switch]$OpenAfterGeneration = $true
)

$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$HtmlFile = Join-Path $ScriptDir "ROTEIRO_TESTES_PARA_PDF.html"
$PdfFile = Join-Path $ScriptDir "$OutputName.pdf"

Write-Host "üìÑ Gerador de PDF - Roteiro de Testes EmployeeVirtual" -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se arquivo HTML existe
if (!(Test-Path $HtmlFile)) {
    Write-Error "‚ùå Arquivo HTML n√£o encontrado: $HtmlFile"
    exit 1
}

Write-Host "‚úÖ Arquivo HTML encontrado: $HtmlFile" -ForegroundColor Green

# M√©todos de convers√£o dispon√≠veis
Write-Host ""
Write-Host "üîç Verificando m√©todos de convers√£o dispon√≠veis..." -ForegroundColor Yellow

$methods = @()

# M√©todo 1: wkhtmltopdf (recomendado)
try {
    $wkVersion = wkhtmltopdf --version 2>$null
    if ($?) {
        $methods += "wkhtmltopdf"
        Write-Host "‚úÖ wkhtmltopdf encontrado" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è  wkhtmltopdf n√£o encontrado" -ForegroundColor Yellow
}

# M√©todo 2: Chrome/Chromium headless
try {
    $chromeExe = Get-Command "chrome.exe" -ErrorAction SilentlyContinue
    if ($chromeExe) {
        $methods += "chrome"
        Write-Host "‚úÖ Google Chrome encontrado" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è  Google Chrome n√£o encontrado" -ForegroundColor Yellow
}

# M√©todo 3: Edge headless (Windows)
try {
    $edgeExe = Get-Command "msedge.exe" -ErrorAction SilentlyContinue
    if ($edgeExe) {
        $methods += "edge"
        Write-Host "‚úÖ Microsoft Edge encontrado" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è  Microsoft Edge n√£o encontrado" -ForegroundColor Yellow
}

# M√©todo 4: Firefox headless
try {
    $firefoxExe = Get-Command "firefox.exe" -ErrorAction SilentlyContinue
    if ($firefoxExe) {
        $methods += "firefox"
        Write-Host "‚úÖ Firefox encontrado" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è  Firefox n√£o encontrado" -ForegroundColor Yellow
}

if ($methods.Count -eq 0) {
    Write-Host ""
    Write-Host "‚ùå Nenhum m√©todo de convers√£o dispon√≠vel!" -ForegroundColor Red
    Write-Host ""
    Write-Host "üí° Op√ß√µes para instalar:" -ForegroundColor Yellow
    Write-Host "  1. wkhtmltopdf (recomendado):"
    Write-Host "     - Download: https://wkhtmltopdf.org/downloads.html"
    Write-Host "     - Instalar e adicionar ao PATH"
    Write-Host ""
    Write-Host "  2. Google Chrome:"
    Write-Host "     - Download: https://www.google.com/chrome/"
    Write-Host "     - Instalar normalmente"
    Write-Host ""
    Write-Host "  3. Microsoft Edge (j√° instalado no Windows 10+)"
    Write-Host ""
    Write-Host "üåê Alternativa: Abra o arquivo HTML no navegador e use Ctrl+P para imprimir em PDF"
    Write-Host "   Arquivo: $HtmlFile"
    
    if ($OpenAfterGeneration) {
        Write-Host ""
        Write-Host "üåê Abrindo arquivo HTML no navegador padr√£o..." -ForegroundColor Cyan
        Start-Process $HtmlFile
    }
    
    exit 1
}

Write-Host ""
Write-Host "üöÄ Gerando PDF usando: $($methods[0])" -ForegroundColor Green

$success = $false

switch ($methods[0]) {
    "wkhtmltopdf" {
        Write-Host "üìÑ Convertendo com wkhtmltopdf..." -ForegroundColor Cyan
        try {
            & wkhtmltopdf --page-size A4 --margin-top 1cm --margin-bottom 1cm --margin-left 1cm --margin-right 1cm --print-media-type --enable-local-file-access $HtmlFile $PdfFile
            if ($?) {
                $success = $true
            }
        } catch {
            Write-Host "‚ùå Erro ao converter com wkhtmltopdf: $_" -ForegroundColor Red
        }
    }
    
    "chrome" {
        Write-Host "üìÑ Convertendo com Google Chrome..." -ForegroundColor Cyan
        try {
            & chrome.exe --headless --disable-gpu --print-to-pdf=$PdfFile --virtual-time-budget=5000 $HtmlFile
            Start-Sleep -Seconds 3
            if (Test-Path $PdfFile) {
                $success = $true
            }
        } catch {
            Write-Host "‚ùå Erro ao converter com Chrome: $_" -ForegroundColor Red
        }
    }
    
    "edge" {
        Write-Host "üìÑ Convertendo com Microsoft Edge..." -ForegroundColor Cyan
        try {
            & msedge.exe --headless --disable-gpu --print-to-pdf=$PdfFile --virtual-time-budget=5000 $HtmlFile
            Start-Sleep -Seconds 3
            if (Test-Path $PdfFile) {
                $success = $true
            }
        } catch {
            Write-Host "‚ùå Erro ao converter com Edge: $_" -ForegroundColor Red
        }
    }
    
    "firefox" {
        Write-Host "üìÑ Convertendo com Firefox..." -ForegroundColor Cyan
        Write-Host "‚ö†Ô∏è  Firefox requer configura√ß√£o manual para PDF headless" -ForegroundColor Yellow
        Write-Host "üåê Abrindo arquivo no Firefox para convers√£o manual..." -ForegroundColor Cyan
        & firefox.exe $HtmlFile
        Write-Host "üí° Use Ctrl+P no Firefox e selecione 'Salvar como PDF'" -ForegroundColor Yellow
        $success = $false
    }
}

Write-Host ""
if ($success -and (Test-Path $PdfFile)) {
    Write-Host "‚úÖ PDF gerado com sucesso!" -ForegroundColor Green
    Write-Host "üìÅ Arquivo salvo: $PdfFile" -ForegroundColor White
    
    $fileSize = (Get-Item $PdfFile).Length
    $fileSizeKB = [math]::Round($fileSize / 1KB, 2)
    Write-Host "üìä Tamanho: $fileSizeKB KB" -ForegroundColor Gray
    
    if ($OpenAfterGeneration) {
        Write-Host ""
        Write-Host "üîç Abrindo PDF..." -ForegroundColor Cyan
        Start-Process $PdfFile
    }
    
    Write-Host ""
    Write-Host "üìß Arquivo pronto para compartilhar com a equipe!" -ForegroundColor Green
    
} else {
    Write-Host "‚ùå Falha na gera√ß√£o do PDF" -ForegroundColor Red
    Write-Host ""
    Write-Host "üåê Alternativa: Abrindo arquivo HTML no navegador..." -ForegroundColor Yellow
    Write-Host "üí° Use Ctrl+P no navegador e selecione 'Salvar como PDF'" -ForegroundColor Yellow
    
    if ($OpenAfterGeneration) {
        Start-Process $HtmlFile
    }
}

Write-Host ""
Write-Host "üìö Arquivos dispon√≠veis:" -ForegroundColor Cyan
Write-Host "  üìÑ HTML: $HtmlFile" -ForegroundColor White
if (Test-Path $PdfFile) {
    Write-Host "  üìÑ PDF:  $PdfFile" -ForegroundColor White
}
Write-Host "  üìù MD:   ROTEIRO_TESTES_COMPLETO.md" -ForegroundColor White

Write-Host ""
Write-Host "‚ú® Conclu√≠do!" -ForegroundColor Green
